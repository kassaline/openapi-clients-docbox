<?php
/**
 * DocumentApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client\Docbox
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DOCBOX® API
 *
 * The DOCBOX® REST API makes it possible to integrate the DOCBOX® into third-party programs such as ERP or CRM applications. The third-party programs can access certain DOCBOX® functions, for example to archive documents in the DOCBOX® or to search for documents in it.  The api is available under https://{docbox-host}:{api-port}/api/v2. The default port is 8081 and should not be mistaken with the port of the webapp.  To authenticate to the API you must pass the API-Key header. Api keys can be configured by administrators in the modules->API section. If you are using the cloud version of DOCBOX® you must also pass the Cloud-ID header with your Cloudid.
 *
 * The version of the OpenAPI document: 7.6.0
 * Contact: support@docbox.eu
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Docbox\Test\Api;

use \OpenAPI\Client\Docbox\Configuration;
use \OpenAPI\Client\Docbox\ApiException;
use \OpenAPI\Client\Docbox\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DocumentApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client\Docbox
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DocumentApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for documentArchive
     *
     * Archives a INBOX-document.
     *
     */
    public function testDocumentArchive()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentAutoExportStatus
     *
     * Set auto export status.
     *
     */
    public function testDocumentAutoExportStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentData
     *
     * .
     *
     */
    public function testDocumentData()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentIdDeletePost
     *
     * Deletes a inbox document.
     *
     */
    public function testDocumentIdDeletePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentIdReplacePost
     *
     * Replaces a document in Inbox..
     *
     */
    public function testDocumentIdReplacePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentKeywordsPost
     *
     * .
     *
     */
    public function testDocumentKeywordsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentList
     *
     * Document list.
     *
     */
    public function testDocumentList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentMetadataGet
     *
     * .
     *
     */
    public function testDocumentMetadataGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentMetadataPost
     *
     * .
     *
     */
    public function testDocumentMetadataPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentOcrResult
     *
     * Returns the OCR-result of a document.
     *
     */
    public function testDocumentOcrResult()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentPdf
     *
     * Document.
     *
     */
    public function testDocumentPdf()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentRename
     *
     * .
     *
     */
    public function testDocumentRename()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentUploadedWith
     *
     * .
     *
     */
    public function testDocumentUploadedWith()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
